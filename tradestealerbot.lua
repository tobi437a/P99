--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.2) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==2) then function v22() local v31=0 -0 ;local v32;while true do if (v31==(2 -1)) then return v32;end if (v31==(0 -0)) then v32=v1(v16,v19,v19);v19=v19 + (2 -1) ;v31=(1551 -(857 + 74)) -(555 + 64) ;end end end v23=nil;function v23() local v33=568 -(367 + 201) ;local v34;local v35;while true do if (v33==(928 -(214 + 713))) then return (v35 * (65 + 191)) + v34 ;end if (0==v33) then v34,v35=v1(v16,v19,v19 + 1 + 1 );v19=v19 + (879 -(254 + 28 + 595)) ;v33=1638 -(1523 + 114) ;end end end v18=3;end if (v18==4) then function v25() local v36=v24();local v37=v24();local v38=(2 -1) -0 ;local v39=(v21(v37,1066 -(68 + 997) ,1290 -(226 + 1044) ) * (((14 -6) -(5 + 1))^(149 -(32 + 85)))) + v36 ;local v40=v21(v37,21 + 0 ,31);local v41=((v21(v37,(1005 -(915 + 82)) + 24 )==(958 -(892 + 65))) and  -(2 -1)) or (1 -0) ;if (v40==0) then if (v39==(0 -0)) then return v41 * 0 ;else v40=351 -(87 + 263) ;v38=180 -(67 + 113) ;end elseif (v40==(1502 + 545)) then return ((v39==(0 -0)) and (v41 * (1/(0 -0)))) or (v41 * NaN) ;end return v8(v41,v40-(753 + 270) ) * (v38 + (v39/((7 -5)^(1004 -(802 + 150))))) ;end v26=nil;function v26(v42) local v43=0 + 0 ;local v44;local v45;while true do if ((2 -0)==v43) then v45={};for v91=1188 -(1069 + 118) , #v44 do v45[v91]=v2(v1(v3(v44,v91,v91)));end v43=6 -(11 -8) ;end if (v43==(6 -3)) then return v6(v45);end if (v43==((442 -(416 + 26)) + 0)) then v44=nil;if  not v42 then v42=v24();if (v42==((0 -0) -0)) then return "";end end v43=1 + 0 ;end if (v43==(792 -(368 + 423))) then v44=v3(v16,v19,(v19 + v42) -(3 -2) );v19=v19 + v42 ;v43=20 -(10 + 8) ;end end end v18=5;end if (v18==6) then v29=nil;function v29() local v46=0;local v47;local v48;local v49;local v50;local v51;local v52;local v53;local v54;local v55;while true do if ((4 + 0)==v46) then v55=nil;while true do if (v47==0) then local v98=0;while true do if (v98~=(1 -0)) then else v47=1 + 0 ;break;end if (v98==(0 -0)) then v48=1784 -(599 + 1185) ;v49=nil;v98=1;end end end if (v47==(2 + 2)) then while true do if (v48==1) then v51=nil;v52=nil;v48=67 -(30 + 35) ;end if (v48==(2 + 0)) then v53=nil;v54=nil;v48=3;end if (v48==3) then v55=nil;while true do local v101=0;local v102;local v103;while true do if (v101==(574 -(507 + 67))) then v102=0;v103=nil;v101=1 + 0 ;end if (v101==(1750 -(1013 + 736))) then while true do if (v102~=(0 + 0)) then else v103=0 -0 ;while true do if (v103~=(2 -1)) then else if (v49~=2) then else local v361=0 -0 ;local v362;while true do if (0==v361) then v362=867 -(550 + 317) ;while true do if (v362==0) then local v391=0;while true do if (v391~=(1 -0)) then else v362=1;break;end if (v391==(0 -0)) then for v400=321 -(53 + 267) ,v54 do local v401=0;local v402;local v403;local v404;while true do if (0==v401) then v402=0;v403=nil;v401=2 -1 ;end if (v401~=(286 -(134 + 151))) then else v404=nil;while true do if (v402~=(1666 -(970 + 695))) then else if (v403==(1 -0)) then v404=v22()~=0 ;elseif (v403==(1992 -(582 + 1408))) then v404=v25();elseif (v403~=(2 + 1)) then else v404=v26();end v55[v400]=v404;break;end if (v402~=(0 -0)) then else local v412=0 -0 ;local v413;while true do if (v412==(850 -(20 + 830))) then v413=0;while true do if (v413==(0 -0)) then local v422=1824 -(1195 + 629) ;while true do if (v422==(1 + 0)) then v413=127 -(116 + 10) ;break;end if (v422~=(0 -0)) then else v403=v22();v404=nil;v422=242 -(187 + 54) ;end end end if ((781 -(162 + 618))==v413) then v402=739 -(542 + 196) ;break;end end break;end end end end break;end end end v53[3]=v22();v391=1 + 0 ;end end end if (v362==(1 + 0)) then for v394=1,v24() do local v395=0;local v396;while true do if (v395==(0 + 0)) then v396=v22();if (v21(v396,1,1 -0 )~=0) then else local v405=0;local v406;local v407;local v408;local v409;while true do if (v405==0) then v406=0 + 0 ;v407=nil;v405=1 -0 ;end if (1==v405) then v408=nil;v409=nil;v405=1 + 1 ;end if (v405~=(1638 -(1373 + 263))) then else while true do if ((1001 -(451 + 549))==v406) then local v414=0;while true do if (v414~=0) then else v409={v23(),v23(),nil,nil};if (v407==(0 + 0)) then local v423=1121 -(118 + 1003) ;local v424;local v425;while true do if (v423~=(0 -0)) then else v424=0;v425=nil;v423=1;end if ((342 -(218 + 123))==v423) then while true do if (v424~=(1581 -(1535 + 46))) then else v425=0;while true do if (v425==(0 -0)) then v409[3 + 0 ]=v23();v409[981 -(553 + 424) ]=v23();break;end end break;end end break;end end elseif (v407==(1 + 0)) then v409[563 -(306 + 254) ]=v24();elseif (v407==(1 + 1)) then v409[5 -2 ]=v24() -((1469 -(899 + 568))^(11 + 5)) ;elseif (v407==(3 + 0)) then local v428=0 -0 ;local v429;local v430;while true do if (v428==(603 -(268 + 335))) then v429=290 -(60 + 230) ;v430=nil;v428=1 + 0 ;end if (v428~=(573 -(426 + 146))) then else while true do if ((0 + 0)==v429) then v430=0;while true do if (v430==(0 -0)) then v409[3]=v24() -(2^(44 -28)) ;v409[1 + 3 ]=v23();break;end end break;end end break;end end end v414=1 + 0 ;end if (v414==(4 -3)) then v406=2;break;end end end if (v406~=(753 -(239 + 514))) then else v407=v21(v396,2,2 + 1 );v408=v21(v396,4,6);v406=1457 -(282 + 1174) ;end if (v406==(1332 -(797 + 532))) then if (v21(v408,3,3 + 0 )==(812 -(569 + 242))) then v409[4]=v55[v409[2 + 2 ]];end v50[v394]=v409;break;end if (v406==(5 -3)) then if (v21(v408,1,1 + 0 )~=(1025 -(706 + 318))) then else v409[2]=v55[v409[1253 -(721 + 530) ]];end if (v21(v408,733 -(476 + 255) ,1273 -(945 + 326) )==1) then v409[2 + 1 ]=v55[v409[3]];end v406=7 -4 ;end end break;end end end break;end end end v49=3 + 0 ;break;end end break;end end end if (v49==(700 -(271 + 429))) then local v363=0 + 0 ;local v364;while true do if (v363==(0 + 0)) then v364=1500 -(1408 + 92) ;while true do if ((0 -0)==v364) then v50={};v51={};v364=1;end if (v364==(337 -(144 + 192))) then v52={};v49=1087 -(461 + 625) ;break;end end break;end end end break;end if (v103~=0) then else if (v49==(1291 -(993 + 295))) then local v365=0 + 0 ;local v366;while true do if ((1171 -(418 + 753))~=v365) then else v366=1504 -(363 + 1141) ;while true do if (v366~=(0 + 0)) then else for v397=1,v24() do v51[v397-1 ]=v29();end return v53;end end break;end end end if (v49==(2 -1)) then local v367=0 + 0 ;local v368;while true do if ((0 + 0)~=v367) then else v368=1975 -(1913 + 62) ;while true do if ((0 + 0)==v368) then local v392=0 + 0 ;local v393;while true do if (v392==(529 -(406 + 123))) then v393=0;while true do if (v393~=(1769 -(1749 + 20))) then else local v410=0 + 0 ;while true do if (v410==(1323 -(1249 + 73))) then v393=1 + 0 ;break;end if (v410==0) then v53={v50,v51,nil,v52};v54=v24();v410=2 -1 ;end end end if (v393==(857 -(564 + 292))) then v368=2 -1 ;break;end end break;end end end if (v368~=(1901 -(106 + 1794))) then else v55={};v49=2;break;end end break;end end end v103=1 + 0 ;end end break;end end break;end end end break;end if (v48==(0 + 0)) then local v100=0 -0 ;while true do if (v100==(2 -1)) then v48=2 -1 ;break;end if (v100~=(304 -(244 + 60))) then else v49=0 + 0 ;v50=nil;v100=477 -(41 + 435) ;end end end end break;end if (v47==(115 -(4 + 110))) then v50=nil;v51=nil;v47=1003 -(938 + 63) ;end if (v47==(586 -(57 + 527))) then local v99=1427 -(41 + 1386) ;while true do if (v99~=(103 -(17 + 86))) then else v52=nil;v53=nil;v99=1126 -(936 + 189) ;end if (1==v99) then v47=3 + 0 ;break;end end end if (v47==(1 + 2)) then v54=nil;v55=nil;v47=1617 -(1565 + 48) ;end end break;end if (v46~=1) then else v49=nil;v50=nil;v46=2 + 0 ;end if (v46==(3 -1)) then v51=nil;v52=nil;v46=270 -(176 + 91) ;end if (v46~=(0 -0)) then else v47=0 -0 ;v48=nil;v46=167 -(122 + 44) ;end if (v46==(5 -2)) then v53=nil;v54=nil;v46=12 -8 ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v56) if (v1(v56,2)==79) then v20=v0(v3(v56,1,1));return "";else local v84=v2(v0(v56,16));if v20 then local v93=v5(v84,v20);v20=nil;return v93;else return v84;end end end);v18=1;end if (v18==3) then v24=nil;function v24() local v57,v58,v59,v60=v1(v16,v19,v19 + ((3743 -2648) -(975 + 117)) );v19=v19 + (1879 -(157 + 1718)) ;return (v60 * 16777216) + (v59 * (53187 + 12349)) + (v58 * (908 -652)) + v57 ;end v25=nil;v18=4;end if (v18==7) then function v30(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v70=v64;local v71=v65;local v72=v66;local v73=v28;local v74=1;local v75= -1;local v76={};local v77={...};local v78=v12("#",...) -1 ;local v79={};local v80={};for v85=0,v78 do if (v85>=v72) then v76[v85-v72 ]=v77[v85 + 1 ];else v80[v85]=v77[v85 + 1 ];end end local v81=(v78-v72) + 1 ;local v82;local v83;while true do v82=v70[v74];v83=v82[1];if (v83<=41) then if (v83<=20) then if (v83<=9) then if (v83<=4) then if (v83<=1) then if (v83>0) then v80[v82[2]]=v80[v82[3]] + v82[4] ;elseif (v82[2]<v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=2) then v80[v82[2]]();elseif (v83==3) then local v207=v82[2];local v208={v80[v207](v80[v207 + 1 ])};local v209=0;for v278=v207,v82[4] do v209=v209 + 1 ;v80[v278]=v208[v209];end else v63[v82[3]]=v80[v82[2]];end elseif (v83<=6) then if (v83>5) then if  not v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end else local v105=0;local v106;while true do if (v105==0) then v106=v82[2];v80[v106](v80[v106 + 1 ]);break;end end end elseif (v83<=7) then v80[v82[2]]=v62[v82[3]];elseif (v83>8) then v80[v82[2]]=v80[v82[3]];else for v282=v82[2],v82[3] do v80[v282]=nil;end end elseif (v83<=14) then if (v83<=11) then if (v83==10) then v80[v82[2]]=v30(v71[v82[3]],nil,v63);else v62[v82[3]]=v80[v82[2]];end elseif (v83<=12) then v80[v82[2]]=v80[v82[3]];elseif (v83>13) then v80[v82[2]]={};else v80[v82[2]]();end elseif (v83<=17) then if (v83<=15) then if (v80[v82[2]]~=v82[4]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83==16) then v80[v82[2]]=v80[v82[3]][v80[v82[4]]];else v80[v82[2]]=v62[v82[3]];end elseif (v83<=18) then local v114=v71[v82[3]];local v115;local v116={};v115=v10({},{__index=function(v182,v183) local v184=v116[v183];return v184[1][v184[2]];end,__newindex=function(v185,v186,v187) local v188=v116[v186];v188[1][v188[2]]=v187;end});for v190=1,v82[4] do local v191=0;local v192;while true do if (v191==0) then v74=v74 + 1 ;v192=v70[v74];v191=1;end if (v191==1) then if (v192[1]==12) then v116[v190-1 ]={v80,v192[3]};else v116[v190-1 ]={v62,v192[3]};end v79[ #v79 + 1 ]=v116;break;end end end v80[v82[2]]=v30(v114,v115,v63);elseif (v83>19) then local v221=0;local v222;local v223;while true do if (v221==1) then for v357=1, #v79 do local v358=v79[v357];for v369=0, #v358 do local v370=v358[v369];local v371=v370[1];local v372=v370[2];if ((v371==v80) and (v372>=v222)) then local v382=0;while true do if (v382==0) then v223[v372]=v371[v372];v370[1]=v223;break;end end end end end break;end if (0==v221) then v222=v82[2];v223={};v221=1;end end else v80[v82[2]]=v80[v82[3]][v82[4]];end elseif (v83<=30) then if (v83<=25) then if (v83<=22) then if (v83==21) then local v118=v82[2];v80[v118](v80[v118 + 1 ]);else v63[v82[3]]=v80[v82[2]];end elseif (v83<=23) then v80[v82[2]]= #v80[v82[3]];elseif (v83>24) then local v226=v82[2];local v227=v80[v226];for v284=v226 + 1 ,v82[3] do v7(v227,v80[v284]);end else do return;end end elseif (v83<=27) then if (v83==26) then if (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end else v80[v82[2]][v82[3]]=v82[4];end elseif (v83<=28) then local v124=v82[2];local v125={};for v193=1, #v79 do local v194=0;local v195;while true do if (v194==0) then v195=v79[v193];for v348=0, #v195 do local v349=v195[v348];local v350=v349[1];local v351=v349[2];if ((v350==v80) and (v351>=v124)) then local v373=0;while true do if (0==v373) then v125[v351]=v350[v351];v349[1]=v125;break;end end end end break;end end end elseif (v83>29) then if ((v82[3]=="_ENV") or (v82[3]=="getfenv")) then v80[v82[2]]=v63;else v80[v82[2]]=v63[v82[3]];end else do return;end end elseif (v83<=35) then if (v83<=32) then if (v83>31) then local v126=0;local v127;local v128;local v129;while true do if (2==v126) then for v321=1,v82[4] do local v322=0;local v323;while true do if (v322==1) then if (v323[1]==12) then v129[v321-1 ]={v80,v323[3]};else v129[v321-1 ]={v62,v323[3]};end v79[ #v79 + 1 ]=v129;break;end if (v322==0) then v74=v74 + 1 ;v323=v70[v74];v322=1;end end end v80[v82[2]]=v30(v127,v128,v63);break;end if (v126==1) then v129={};v128=v10({},{__index=function(v324,v325) local v326=v129[v325];return v326[1][v326[2]];end,__newindex=function(v327,v328,v329) local v330=v129[v328];v330[1][v330[2]]=v329;end});v126=2;end if (v126==0) then v127=v71[v82[3]];v128=nil;v126=1;end end else v74=v82[3];end elseif (v83<=33) then if (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83>34) then local v230=v82[2];v80[v230](v13(v80,v230 + 1 ,v82[3]));else local v231=v82[2];v80[v231]=v80[v231](v13(v80,v231 + 1 ,v75));end elseif (v83<=38) then if (v83<=36) then v80[v82[2]]={};elseif (v83==37) then local v233=v82[3];local v234=v80[v233];for v287=v233 + 1 ,v82[4] do v234=v234   .. v80[v287] ;end v80[v82[2]]=v234;else v80[v82[2]][v82[3]]=v80[v82[4]];end elseif (v83<=39) then local v132=0;local v133;while true do if (v132==0) then v133=v82[2];v80[v133]=v80[v133]();break;end end elseif (v83>40) then if v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end else v62[v82[3]]=v80[v82[2]];end elseif (v83<=62) then if (v83<=51) then if (v83<=46) then if (v83<=43) then if (v83==42) then local v134=v82[2];local v135={v80[v134](v80[v134 + 1 ])};local v136=0;for v196=v134,v82[4] do local v197=0;while true do if (v197==0) then v136=v136 + 1 ;v80[v196]=v135[v136];break;end end end else local v137=0;local v138;local v139;local v140;local v141;while true do if (1==v137) then v75=(v140 + v138) -1 ;v141=0;v137=2;end if (v137==0) then v138=v82[2];v139,v140=v73(v80[v138](v13(v80,v138 + 1 ,v82[3])));v137=1;end if (v137==2) then for v335=v138,v75 do local v336=0;while true do if (v336==0) then v141=v141 + 1 ;v80[v335]=v139[v141];break;end end end break;end end end elseif (v83<=44) then local v142=v82[2];v80[v142]=v80[v142]();elseif (v83==45) then local v240=0;local v241;while true do if (v240==0) then v241=v82[2];v80[v241]=v80[v241](v13(v80,v241 + 1 ,v75));break;end end elseif  not v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=48) then if (v83==47) then if (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end else local v144=v82[2];local v145=v80[v82[3]];v80[v144 + 1 ]=v145;v80[v144]=v145[v82[4]];end elseif (v83<=49) then v80[v82[2]]=v80[v82[3]] + v82[4] ;elseif (v83==50) then v80[v82[2]]= #v80[v82[3]];else v80[v82[2]]=v80[v82[3]][v80[v82[4]]];end elseif (v83<=56) then if (v83<=53) then if (v83>52) then local v150=0;local v151;local v152;while true do if (v150==0) then v151=v82[3];v152=v80[v151];v150=1;end if (v150==1) then for v338=v151 + 1 ,v82[4] do v152=v152   .. v80[v338] ;end v80[v82[2]]=v152;break;end end else v80[v82[2]]=v80[v82[3]][v82[4]];end elseif (v83<=54) then local v155=v82[2];v80[v155]=v80[v155](v80[v155 + 1 ]);elseif (v83>55) then local v246=0;local v247;while true do if (v246==0) then v247=v82[2];do return v13(v80,v247,v247 + v82[3] );end break;end end else local v248=v82[2];local v249=v82[4];local v250=v248 + 2 ;local v251={v80[v248](v80[v248 + 1 ],v80[v250])};for v294=1,v249 do v80[v250 + v294 ]=v251[v294];end local v252=v251[1];if v252 then local v339=0;while true do if (v339==0) then v80[v250]=v252;v74=v82[3];break;end end else v74=v74 + 1 ;end end elseif (v83<=59) then if (v83<=57) then local v157=0;local v158;local v159;local v160;while true do if (v157==0) then v158=v82[2];v159=v80[v158];v157=1;end if (v157==1) then v160=v82[3];for v340=1,v160 do v159[v340]=v80[v158 + v340 ];end break;end end elseif (v83==58) then if (v80[v82[2]]~=v82[4]) then v74=v74 + 1 ;else v74=v82[3];end else do return v80[v82[2]];end end elseif (v83<=60) then local v161=0;local v162;while true do if (v161==0) then v162=v82[2];v80[v162]=v80[v162](v13(v80,v162 + 1 ,v82[3]));break;end end elseif (v83==61) then if v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end else local v253=v82[2];local v254=v82[4];local v255=v253 + 2 ;local v256={v80[v253](v80[v253 + 1 ],v80[v255])};for v302=1,v254 do v80[v255 + v302 ]=v256[v302];end local v257=v256[1];if v257 then local v345=0;while true do if (v345==0) then v80[v255]=v257;v74=v82[3];break;end end else v74=v74 + 1 ;end end elseif (v83<=72) then if (v83<=67) then if (v83<=64) then if (v83>63) then local v163=v82[2];v80[v163]=v80[v163](v13(v80,v163 + 1 ,v82[3]));else v80[v82[2]][v82[3]]=v80[v82[4]];end elseif (v83<=65) then local v167=v82[2];local v168=v80[v167];local v169=v82[3];for v198=1,v169 do v168[v198]=v80[v167 + v198 ];end elseif (v83==66) then if (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end else local v258=v82[2];v80[v258](v13(v80,v258 + 1 ,v82[3]));end elseif (v83<=69) then if (v83==68) then for v201=v82[2],v82[3] do v80[v201]=nil;end else local v170=v82[2];local v171,v172=v73(v80[v170](v80[v170 + 1 ]));v75=(v172 + v170) -1 ;local v173=0;for v203=v170,v75 do v173=v173 + 1 ;v80[v203]=v171[v173];end end elseif (v83<=70) then if ((v82[3]=="_ENV") or (v82[3]=="getfenv")) then v80[v82[2]]=v63;else v80[v82[2]]=v63[v82[3]];end elseif (v83==71) then local v262=v82[2];local v263,v264=v73(v80[v262](v80[v262 + 1 ]));v75=(v264 + v262) -1 ;local v265=0;for v305=v262,v75 do local v306=0;while true do if (v306==0) then v265=v265 + 1 ;v80[v305]=v263[v265];break;end end end else v80[v82[2]][v82[3]]=v82[4];end elseif (v83<=77) then if (v83<=74) then if (v83==73) then v80[v82[2]]=v82[3];else local v176=0;local v177;local v178;while true do if (v176==0) then v177=v82[2];v178=v80[v82[3]];v176=1;end if (v176==1) then v80[v177 + 1 ]=v178;v80[v177]=v178[v82[4]];break;end end end elseif (v83<=75) then if (v82[2]<v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83>76) then v74=v82[3];else local v270=v82[2];v80[v270](v13(v80,v270 + 1 ,v75));end elseif (v83<=80) then if (v83<=78) then v80[v82[2]]=v82[3];elseif (v83==79) then local v271=v82[2];local v272,v273=v73(v80[v271](v13(v80,v271 + 1 ,v82[3])));v75=(v273 + v271) -1 ;local v274=0;for v312=v271,v75 do v274=v274 + 1 ;v80[v312]=v272[v274];end else local v275=v82[2];v80[v275]=v80[v275](v80[v275 + 1 ]);end elseif (v83<=81) then local v181=v82[2];v80[v181](v13(v80,v181 + 1 ,v75));elseif (v83>82) then do return v80[v82[2]];end else v80[v82[2]]=v30(v71[v82[3]],nil,v63);end v74=v74 + 1 ;end end;end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v67,v68,v69) if v69 then local v88=1018 -(697 + 321) ;local v89;while true do if (v88==(1189 -(449 + 740))) then v89=(v67/(2^(v68-(2 -1))))%((3 -1)^(((v69-(948 -(245 + 702))) -(v68-(1 -0))) + ((5 -3) -1))) ;return v89-(v89%(1 + 0)) ;end end else local v90=(3 -1)^(v68-(2 -1)) ;return (((v67%(v90 + v90))>=v90) and (1228 -(322 + 905))) or (0 + 0) ;end end v22=nil;v18=2;end end end vv9(),...);
